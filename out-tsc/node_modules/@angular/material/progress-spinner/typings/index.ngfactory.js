"use strict";
/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 
Object.defineProperty(exports, "__esModule", { value: true });
var i0 = require("@angular/core");
var i1 = require("@angular/material/progress-spinner");
var i2 = require("@angular/cdk/bidi");
var i3 = require("@angular/common");
var i4 = require("@angular/cdk/platform");
var i5 = require("@angular/material/core");
var MatProgressSpinnerModuleNgFactory = i0.ɵcmf(i1.MatProgressSpinnerModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, []], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(6144, i2.DIR_DOCUMENT, null, [i3.DOCUMENT]), i0.ɵmpd(4608, i2.Directionality, i2.Directionality, [[2, i2.DIR_DOCUMENT]]), i0.ɵmpd(4608, i4.Platform, i4.Platform, []), i0.ɵmpd(512, i2.BidiModule, i2.BidiModule, []), i0.ɵmpd(256, i5.MATERIAL_SANITY_CHECKS, true, []), i0.ɵmpd(512, i5.MatCommonModule, i5.MatCommonModule, [[2, i5.MATERIAL_SANITY_CHECKS]]), i0.ɵmpd(512, i4.PlatformModule, i4.PlatformModule, []), i0.ɵmpd(512, i1.MatProgressSpinnerModule, i1.MatProgressSpinnerModule, [])]); });
exports.MatProgressSpinnerModuleNgFactory = MatProgressSpinnerModuleNgFactory;
var styles_MatProgressSpinner = [".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2s linear infinite}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4s;animation-timing-function:cubic-bezier(.35,0,.25,1);animation-iteration-count:infinite}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10s cubic-bezier(.87,.03,.33,1) infinite}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.60617px;transform:rotate(0)}12.5%{stroke-dashoffset:56.54867px;transform:rotate(0)}12.51%{stroke-dashoffset:56.54867px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.60617px;transform:rotateX(180deg) rotate(72.5deg)}25.1%{stroke-dashoffset:268.60617px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.54867px;transform:rotate(270deg)}37.51%{stroke-dashoffset:56.54867px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.60617px;transform:rotateX(180deg) rotate(161.5deg)}50.01%{stroke-dashoffset:268.60617px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.54867px;transform:rotate(180deg)}62.51%{stroke-dashoffset:56.54867px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.60617px;transform:rotateX(180deg) rotate(251.5deg)}75.01%{stroke-dashoffset:268.60617px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.54867px;transform:rotate(90deg)}87.51%{stroke-dashoffset:56.54867px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.60617px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}"];
var RenderType_MatProgressSpinner = i0.ɵcrt({ encapsulation: 2, styles: styles_MatProgressSpinner, data: {} });
exports.RenderType_MatProgressSpinner = RenderType_MatProgressSpinner;
function View_MatProgressSpinner_0(_l) { return i0.ɵvid(2, [(_l()(), i0.ɵeld(0, 0, null, null, 1, ":svg:svg", [["focusable", "false"], ["preserveAspectRatio", "xMidYMid meet"]], [[4, "width", "px"], [4, "height", "px"], [1, "viewBox", 0]], null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 0, ":svg:circle", [["cx", "50%"], ["cy", "50%"]], [[1, "r", 0], [4, "animation-name", null], [4, "stroke-dashoffset", "px"], [4, "stroke-dasharray", "px"], [4, "stroke-width", "%"]], null, null, null, null))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co._elementSize; var currVal_1 = _co._elementSize; var currVal_2 = _co._viewBox; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2); var currVal_3 = _co._circleRadius; var currVal_4 = ("mat-progress-spinner-stroke-rotate-" + _co.diameter); var currVal_5 = _co._strokeDashOffset; var currVal_6 = _co._strokeCircumference; var currVal_7 = _co._circleStrokeWidth; _ck(_v, 1, 0, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7); }); }
exports.View_MatProgressSpinner_0 = View_MatProgressSpinner_0;
function View_MatProgressSpinner_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, "mat-progress-spinner", [["class", "mat-progress-spinner"], ["role", "progressbar"]], [[4, "width", "px"], [4, "height", "px"], [1, "aria-valuemin", 0], [1, "aria-valuemax", 0], [1, "aria-valuenow", 0], [1, "mode", 0]], null, null, View_MatProgressSpinner_0, RenderType_MatProgressSpinner)), i0.ɵdid(1, 573440, null, 0, i1.MatProgressSpinner, [i0.ElementRef, i4.Platform, [2, i3.DOCUMENT]], null, null)], null, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 1)._elementSize; var currVal_1 = i0.ɵnov(_v, 1)._elementSize; var currVal_2 = ((i0.ɵnov(_v, 1).mode === "determinate") ? 0 : null); var currVal_3 = ((i0.ɵnov(_v, 1).mode === "determinate") ? 100 : null); var currVal_4 = i0.ɵnov(_v, 1).value; var currVal_5 = i0.ɵnov(_v, 1).mode; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5); }); }
exports.View_MatProgressSpinner_Host_0 = View_MatProgressSpinner_Host_0;
var MatProgressSpinnerNgFactory = i0.ɵccf("mat-progress-spinner", i1.MatProgressSpinner, View_MatProgressSpinner_Host_0, { color: "color", diameter: "diameter", strokeWidth: "strokeWidth", mode: "mode", value: "value" }, {}, []);
exports.MatProgressSpinnerNgFactory = MatProgressSpinnerNgFactory;
var styles_MatSpinner = [".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2s linear infinite}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4s;animation-timing-function:cubic-bezier(.35,0,.25,1);animation-iteration-count:infinite}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10s cubic-bezier(.87,.03,.33,1) infinite}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.60617px;transform:rotate(0)}12.5%{stroke-dashoffset:56.54867px;transform:rotate(0)}12.51%{stroke-dashoffset:56.54867px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.60617px;transform:rotateX(180deg) rotate(72.5deg)}25.1%{stroke-dashoffset:268.60617px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.54867px;transform:rotate(270deg)}37.51%{stroke-dashoffset:56.54867px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.60617px;transform:rotateX(180deg) rotate(161.5deg)}50.01%{stroke-dashoffset:268.60617px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.54867px;transform:rotate(180deg)}62.51%{stroke-dashoffset:56.54867px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.60617px;transform:rotateX(180deg) rotate(251.5deg)}75.01%{stroke-dashoffset:268.60617px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.54867px;transform:rotate(90deg)}87.51%{stroke-dashoffset:56.54867px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.60617px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}"];
var RenderType_MatSpinner = i0.ɵcrt({ encapsulation: 2, styles: styles_MatSpinner, data: {} });
exports.RenderType_MatSpinner = RenderType_MatSpinner;
function View_MatSpinner_0(_l) { return i0.ɵvid(2, [(_l()(), i0.ɵeld(0, 0, null, null, 1, ":svg:svg", [["focusable", "false"], ["preserveAspectRatio", "xMidYMid meet"]], [[4, "width", "px"], [4, "height", "px"], [1, "viewBox", 0]], null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 0, ":svg:circle", [["cx", "50%"], ["cy", "50%"]], [[1, "r", 0], [4, "animation-name", null], [4, "stroke-dashoffset", "px"], [4, "stroke-dasharray", "px"], [4, "stroke-width", "%"]], null, null, null, null))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co._elementSize; var currVal_1 = _co._elementSize; var currVal_2 = _co._viewBox; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2); var currVal_3 = _co._circleRadius; var currVal_4 = ("mat-progress-spinner-stroke-rotate-" + _co.diameter); var currVal_5 = _co._strokeDashOffset; var currVal_6 = _co._strokeCircumference; var currVal_7 = _co._circleStrokeWidth; _ck(_v, 1, 0, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7); }); }
exports.View_MatSpinner_0 = View_MatSpinner_0;
function View_MatSpinner_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, "mat-spinner", [["class", "mat-spinner mat-progress-spinner"], ["mode", "indeterminate"], ["role", "progressbar"]], [[4, "width", "px"], [4, "height", "px"]], null, null, View_MatSpinner_0, RenderType_MatSpinner)), i0.ɵdid(1, 573440, null, 0, i1.MatSpinner, [i0.ElementRef, i4.Platform, [2, i3.DOCUMENT]], null, null)], null, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 1)._elementSize; var currVal_1 = i0.ɵnov(_v, 1)._elementSize; _ck(_v, 0, 0, currVal_0, currVal_1); }); }
exports.View_MatSpinner_Host_0 = View_MatSpinner_Host_0;
var MatSpinnerNgFactory = i0.ɵccf("mat-spinner", i1.MatSpinner, View_MatSpinner_Host_0, { color: "color", diameter: "diameter", strokeWidth: "strokeWidth", mode: "mode", value: "value" }, {}, []);
exports.MatSpinnerNgFactory = MatSpinnerNgFactory;
//# sourceMappingURL=index.ngfactory.js.map